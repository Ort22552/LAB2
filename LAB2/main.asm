//Universidad del Valle de Guatemala
//IE2023 Programación de microcontroladores
//Autor : Josué Ortíz 
//Proyecto: Prelab 1
//Idescripción
//Hardware: ATMega328P
//Created:
//******************************************************************************
//ENCABEZADO
//******************************************************************************
.include "M328PDEF.inc"

.cseg
.org 0x00
//******************************************************************************
//Configuración de la pila
//******************************************************************************
LDI R16, LOW(RAMEND)
OUT SPL, R16
LDI R17, HIGH(RAMEND)
OUT SPH, R17
//******************************************************************************


//******************************************************************************
//CONFIGURACIONES
//******************************************************************************
SETUP:
// CONTADOR 1 SE GUARDA EN R29 Y OCUPA DE PD13 A PD 10
// CONTADOR 2 SE GUARDA EN R30 Y OCUPA DE PD9 A PD6
// CONTADOR TOTAL SE GUARDA EN R31 Y OCUPA DE PD5 A PD2 Y XXX
SBI DDRB, PB5 ; DEFINIENDO D13 COMO SALIDA
SBI DDRB, PB4 ; DEFINIENDO D12 COMO SALIDA
SBI DDRB, PB3 ; DEFINIENDO D11 COMO SALIDA
SBI DDRB, PB2 ; DEFINIENDO D10 COMO SALIDA
SBI DDRB, PB1 ; DEFINIENDO D9 COMO SALIDA
SBI DDRB, PB0 ; DEFINIENDO D8 COMO SALIDA
SBI DDRD, PD7 ; DEFINIENDO D7 COMO SALIDA
SBI DDRD, PD6 ; DEFINIENDO D6 COMO SALIDA
SBI DDRD, PD5 ; DEFINIENDO D5 COMO SALIDA
SBI DDRD, PD4 ; DEFINIENDO D4 COMO SALIDA
SBI DDRD, PD3 ; DEFINIENDO D3 COMO SALIDA
SBI DDRD, PD2 ; DEFINIENDO D2 COMO SALIDA
CBI PORTB, PB5; COLOCAR 0 EN EL D13
CBI PORTB, PB4; COLOCAR 0 EN EL D12
CBI PORTB, PB3; COLOCAR 0 EN EL D11
CBI PORTB, PB2; COLOCAR 0 EN EL D10
CBI PORTB, PB1; COLOCAR 0 EN EL D9
CBI PORTB, PB0; COLOCAR 0 EN EL D8
CBI PORTD, PD7 ; COLOCAR 0 EN EL D7
CBI PORTD, PD6 ; COLOCAR 0 EN EL D6
CBI PORTD, PD5 ; COLOCAR 0 EN EL D5
CBI PORTD, PD4 ; COLOCAR 0 EN EL D4
CBI PORTD, PD3 ; COLOCAR 0 EN EL D3
CBI PORTD, PD2 ; COLOCAR 0 EN EL D2
CBI DDRC, PC0; DEFINIENDO EL A0 COMO ENTRADA
CBI DDRC, PC1; DEFINIENDO EL A1 COMO ENTRADA
CBI DDRC, PC2; DEFINIENDO EL A2 COMO ENTRADA
SBI PORTC, PC0; COLOCANDO EN PULL UP
SBI PORTC, PC1; COLOCANDO EN PULL UP
SBI PORTC, PC2; COLOCANDO EN PULL UP
CALL CONFIGURARTIMER0
LDI R17,0
LDI R18,0





//******************************************************************************
//Loop Infinito
//******************************************************************************
LOOP:
	IN R16, TIFR0
	CPI R16, (1<<TOV0)
BRNE LOOP

	LDI R16, 99
	OUT TCNT0, R16

	SBI TIFR0, TOV0

	INC R17
	CPI R17, 10 
	BRNE LOOP
	CALL CONTADOR
	CLR R17
	CALL ACTUALIZAR1




//IN R16, PINC
//ANDI R16, 0x1F// 0b00001111 
//CPI R16, 0b0001_1110 ; SE COMPARA EL BOTON DE SUMA1 PARA SABER SI FUE ACCIONADO 
//BREQ SUMANDO1; si se presiona el boton se manda a llamar la subrutina de sumar1
//IN R16, PINC
//ANDI R16, 0x1F// 0b00001111 
//CPI R16, 0b00011011 ; SE COMPARA EL BOTON DE SUMA2 PARA SABER SI FUE ACCIONADO 
//BREQ SUMANDO2; si se presiona el boton se manda a llamar la subrutina de sumar2
//IN R16, PINC
//ANDI R16, 0x1F// 0b00001111 
//CPI R16, 0b00001111; SE COMPARA EL BOTON DE SUMATOTAL PARA SABER SI FUE ACCIONADO
//BREQ SUMANDOTOTAL; si se presiona el boton se manda a llamar la subrutina de SUMARTOTAL
//IN R16, PINC
//ANDI R16, 0x1F// 0b00001111 
//CPI R16, 0b00011101 ; SE COMPARA EL BOTON DE RESTAR1 PARA SABER SI FUE ACCIONADO 
//BREQ RESTANDO1; si se presiona el boton se manda a llamar la subrutina de RESTAR1
//IN R16, PINC
//ANDI R16, 0x1F// 0b00001111 
//CPI R16, 0b00010111 ; SE COMPARA EL BOTON DE RESTAR2 PARA SABER SI FUE ACCIONADO 
//BREQ RESTANDO2; si se presiona el boton se manda a llamar la subrutina de RESTAR2
//RJMP LOOP
//SUMANDO1:
//CALL SUMAR1
//CALL ACTUALIZAR1
//RJMP LOOP
//SUMANDO2:
//CALL SUMAR2
//CALL ACTUALIZAR2
//RJMP LOOP
//SUMANDOTOTAL:
//CALL SUMARTOTAL 
//CALL ACTUALIZARTOTAL
//RJMP LOOP
//RESTANDO1:
//CALL RESTAR1
//CALL ACTUALIZAR1
//RJMP LOOP
//RESTANDO2:
//CALL RESTAR2
//CALL ACTUALIZAR2
RJMP LOOP



//******************************************************************************
//SUB RUTINA
//******************************************************************************
CONFIGURARTIMER0:
	LDI R16 , (1<<2 | 1<<0)
	OUT TCCR0B, R16 

	LDI R16 , 100
	OUT TCNT0, R16 
RET 

CONTADOR:
 INC R18
 CPI R18, 16
 BREQ REP
 RET
 REP: 
 LDI R18, 0
 RET

SUMAR1: 
INC R29; SE SUMA 1 AL REGISTRO
CPI R29, 16 ; SE COMPARA SI EL VALOR EN EL REGISTRO ES MAYOR A 15 
BREQ REINICIAR1; SE SALTA EL RET SI EL VALOR ES MAYOR A 15
RET
REINICIAR1:
LDI R29, 0; SE REINICIA EL CONTADOR
RET 

SUMAR2: 
INC R30; SE SUMA 1 AL REGISTRO
CPI R30, 16 ; SE COMPARA SI EL VALOR EN EL REGISTRO ES MAYOR A 15
BREQ REINICIAR2; SE SALTA EL RET SI EL VALOR ES MAYOR A 15
RET
REINICIAR2: 
LDI R30, 0; SE REINICIA EL CONTADOR
RET 

SUMARTOTAL:
LDI R31, 0; SE REINICIA EL REGISTRO 32
ADD R31, R29; SE SUMA EL VALOR DEL PRIMER REGISTRO 
ADD R31, R30; SE SUMA EL VALORDEL SEGUNDO REGISTRO
RET 

RESTAR1:
SUBI R29, 1; SE RESTA 1 AL REGISTRO 
CPI R29, -1; SE COMPARA SI EL VALOR EN EL REGISTRO ES MENOR A 0
BREQ REINICIAR3; SE SALTA EL RET SI EL VALOR ES MENOR A 0
RET
REINICIAR3:
LDI R29,15; SE LLEVA HASTA 15 EL CONTADOR
RET

RESTAR2:
SUBI R30, 1; SE RESTA 1 AL REGISTRO 
CPI R30, -1; SE COMPARA SI EL VALOR EN EL REGISTRO ES MENOR A 0
BREQ REINICIAR4; SE SALTA EL RET SI EL VALOR ES MENOR A 0
RET
REINICIAR4:
LDI R30,15; SE LLEVA HASTA 15 EL CONTADOR
RET

ACTUALIZAR1: 
CPI R18, 1; COMPARA SI ES UNO 
BRNE DOS1
SBI PORTB, PB5 ; PRIMER BIT
CBI PORTB, PB4 ; SEGUNDO BIT 
CBI PORTB, PB3 ; TERCER BIT
CBI PORTB, PB2 ; CUARTO BIT 
DOS1:
CPI R18, 2; COMPARA SI ES DOS 
BRNE TRES1
CBI PORTB, PB5 ; PRIMER BIT
SBI PORTB, PB4 ; SEGUNDO BIT 
CBI PORTB, PB3 ; TERCER BIT
CBI PORTB, PB2 ; CUARTO BIT
TRES1:
CPI R18, 3; COMPARA SI ES TRES
BRNE CUATRO1
SBI PORTB, PB5 ; PRIMER BIT
SBI PORTB, PB4 ; SEGUNDO BIT 
CBI PORTB, PB3 ; TERCER BIT
CBI PORTB, PB2 ; CUARTO BIT
CUATRO1:
CPI R18, 4; COMPARA SI ES CUATRO 
BRNE CINCO1
CBI PORTB, PB5 ; PRIMER BIT
CBI PORTB, PB4 ; SEGUNDO BIT 
SBI PORTB, PB3 ; TERCER BIT
CBI PORTB, PB2 ; CUARTO BIT
CINCO1:
CPI R18, 5; COMPARA SI ES CINCO  
BRNE SEIS1
SBI PORTB, PB5 ; PRIMER BIT
CBI PORTB, PB4 ; SEGUNDO BIT 
SBI PORTB, PB3 ; TERCER BIT
CBI PORTB, PB2 ; CUARTO BIT
SEIS1:
CPI R18, 6; COMPARA SI ES SEIS
BRNE SIETE1
CBI PORTB, PB5 ; PRIMER BIT
SBI PORTB, PB4 ; SEGUNDO BIT 
SBI PORTB, PB3 ; TERCER BIT
CBI PORTB, PB2 ; CUARTO BIT
SIETE1:
CPI R18, 7; COMPARA SI ES SIETE 
BRNE OCHO1
SBI PORTB, PB5 ; PRIMER BIT
SBI PORTB, PB4 ; SEGUNDO BIT 
SBI PORTB, PB3 ; TERCER BIT
CBI PORTB, PB2 ; CUARTO BIT
OCHO1:
CPI R18, 8; COMPARA SI ES OCHO 
BRNE NUEVE1
CBI PORTB, PB5 ; PRIMER BIT
CBI PORTB, PB4 ; SEGUNDO BIT 
CBI PORTB, PB3 ; TERCER BIT
SBI PORTB, PB2 ; CUARTO BIT
NUEVE1:
CPI R18, 9; COMPARA SI ES NUEVE 
BRNE DIEZ1
SBI PORTB, PB5 ; PRIMER BIT
CBI PORTB, PB4 ; SEGUNDO BIT 
CBI PORTB, PB3 ; TERCER BIT
SBI PORTB, PB2 ; CUARTO BIT
DIEZ1:
CPI R18, 10; COMPARA SI ES DIEZ 
BRNE ONCE1
CBI PORTB, PB5 ; PRIMER BIT
SBI PORTB, PB4 ; SEGUNDO BIT 
CBI PORTB, PB3 ; TERCER BIT
SBI PORTB, PB2 ; CUARTO BIT}
ONCE1:
CPI R18, 11; COMPARA SI ES ONCE 
BRNE DOCE1
SBI PORTB, PB5 ; PRIMER BIT
SBI PORTB, PB4 ; SEGUNDO BIT 
CBI PORTB, PB3 ; TERCER BIT
SBI PORTB, PB2 ; CUARTO BIT
DOCE1:
CPI R18, 12; COMPARA SI ES DOCE 
BRNE TRECE1
CBI PORTB, PB5 ; PRIMER BIT
CBI PORTB, PB4 ; SEGUNDO BIT 
SBI PORTB, PB3 ; TERCER BIT
SBI PORTB, PB2 ; CUARTO BIT
TRECE1:
CPI R18, 13; COMPARA SI ES TRECE 
BRNE CATORCE1
SBI PORTB, PB5 ; PRIMER BIT
CBI PORTB, PB4 ; SEGUNDO BIT 
SBI PORTB, PB3 ; TERCER BIT
SBI PORTB, PB2 ; CUARTO BIT
CATORCE1:
CPI R18, 14; COMPARA SI ES CATORCE 
BRNE QUINCE1
CBI PORTB, PB5 ; PRIMER BIT
SBI PORTB, PB4 ; SEGUNDO BIT 
SBI PORTB, PB3 ; TERCER BIT
SBI PORTB, PB2 ; CUARTO BIT
QUINCE1:
CPI R18, 15; COMPARA SI ES 15 
BRNE CERO1
SBI PORTB, PB5 ; PRIMER BIT
SBI PORTB, PB4 ; SEGUNDO BIT 
SBI PORTB, PB3 ; TERCER BIT
SBI PORTB, PB2 ; CUARTO BIT
CERO1:
CPI R18, 0; COMPARA SI ES CERO 
BRNE REGRESO
CBI PORTB, PB5 ; PRIMER BIT
CBI PORTB, PB4 ; SEGUNDO BIT 
CBI PORTB, PB3 ; TERCER BIT
CBI PORTB, PB2 ; CUARTO BIT
REGRESO:
RET

